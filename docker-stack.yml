version: '3.7'

x-deploy-opts: &deploy-opts
  deploy:
    mode: replicated
    replicas: 1
    placement:
      constraints:
        - node.labels.elk == true
    restart_policy:
      condition: on-failure
      delay: 5s
      max_attempts: 10
    resources:
      limits:
        memory: 768M

services:
  elasticsearch:
    hostname: "{{.Node.Hostname}}-elasticsearch"
    deploy:
      mode: global
      endpoint_mode: dnsrr
      placement:
        constraints:
          - node.labels.elk == true
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
      resources:
        limits:
          memory: 2048M
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    environment:
      - cluster.name=stage
      - cluster.initial_master_nodes=${INITIAL_MASTER}-elasticsearch
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - discovery.zen.ping.unicast.hosts=elasticsearch
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=false
      - node.name={{.Node.Hostname}}-elasticsearch
      - network.host=0.0.0.0

  es_proxy:
    << : *deploy-opts
    image: nginx:alpine
    ports:
      - "9200:80"
    configs:
      - source: es_proxy_config
        target: /etc/nginx/nginx.conf

  elastalert:
    << : *deploy-opts
    image: pavelpanfilov/var:elastalert
    configs:
      - source: elastalert_rules
        target: /opt/rules/rules.yml
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: "9200"
      ELASTALERT_INDEX: elastalert_status

  logstash:
    << : *deploy-opts
    image: docker.elastic.co/logstash/logstash:7.6.2
    ports:
      - "8080:8080"
      - "9600:9600"
      - "4560:4560"
    configs:
      - source: logstash_config
        target: /usr/share/logstash/pipeline/logstash.conf
    environment:
      LS_JAVA_OPTS: -Xmx512m -Xms512m
      http.host: "0.0.0.0"
      xpack.monitoring.elasticsearch.hosts: "http://elasticsearch:9200"
      xpack.monitoring.enabled: "true"

  kibana:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.elk == true
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 10
      resources:
        limits:
          memory: 3000M
    image: docker.elastic.co/kibana/kibana:7.6.2
    ports:
      - "5601:5601"
    environment:
      XPACK_MONITORING_ENABLED: "false"
      ELASTICSEARCH_HOSTS: "http://elasticsearch:9200"

configs:
  logstash_config:
    file: ./logstash/logstash.conf
  elastalert_rules:
    name: ${TIMESTAMP}-elastalert_rules
    file: ./elastalert/rules.yml
  es_proxy_config:
    file: ./es_proxy/nginx.conf

volumes:
  elasticsearch: